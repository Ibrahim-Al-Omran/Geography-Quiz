{"ast":null,"code":"import shuffle from './shuffle';\nexport default function generateOptions(correctAnswer, filteredCountries, mode) {\n  if (mode === \"capital\") {\n    const validWrongChoices = filteredCountries.filter(c => c.capital && c.capital[0] && c.capital[0] !== correctAnswer).map(c => c.capital[0]);\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctAnswer]);\n  } else if (mode === \"flag\") {\n    var _correctCountry$flags;\n    // For flag mode, correctAnswer should be the country name, not the flag URL\n    const correctCountry = filteredCountries.find(c => c.name.common === correctAnswer);\n    const correctFlagUrl = correctCountry === null || correctCountry === void 0 ? void 0 : (_correctCountry$flags = correctCountry.flags) === null || _correctCountry$flags === void 0 ? void 0 : _correctCountry$flags.png;\n    const validWrongChoices = filteredCountries.filter(c => c.flags && c.flags.png && c.name.common !== correctAnswer).map(c => c.flags.png);\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctFlagUrl]);\n  }\n  return [];\n}","map":{"version":3,"names":["shuffle","generateOptions","correctAnswer","filteredCountries","mode","validWrongChoices","filter","c","capital","map","incorrect","slice","_correctCountry$flags","correctCountry","find","name","common","correctFlagUrl","flags","png"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/utils/generateOptions.js"],"sourcesContent":["import shuffle from './shuffle';\n\nexport default function generateOptions(correctAnswer, filteredCountries, mode) {\n  \n  if (mode === \"capital\") {\n    const validWrongChoices = filteredCountries\n      .filter(c => c.capital && c.capital[0] && c.capital[0] !== correctAnswer)\n      .map(c => c.capital[0]);\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctAnswer]);\n  } \n  else if (mode === \"flag\") {\n    // For flag mode, correctAnswer should be the country name, not the flag URL\n    const correctCountry = filteredCountries.find(c => c.name.common === correctAnswer);\n    const correctFlagUrl = correctCountry?.flags?.png;\n    \n    const validWrongChoices = filteredCountries\n      .filter(c => c.flags && c.flags.png && c.name.common !== correctAnswer)\n      .map(c => c.flags.png);\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctFlagUrl]);\n  }\n\n  return [];\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,eAAe,SAASC,eAAeA,CAACC,aAAa,EAAEC,iBAAiB,EAAEC,IAAI,EAAE;EAE9E,IAAIA,IAAI,KAAK,SAAS,EAAE;IACtB,MAAMC,iBAAiB,GAAGF,iBAAiB,CACxCG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,IAAID,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,KAAKN,aAAa,CAAC,CACxEO,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzB,MAAME,SAAS,GAAGV,OAAO,CAACK,iBAAiB,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,OAAOX,OAAO,CAAC,CAAC,GAAGU,SAAS,EAAER,aAAa,CAAC,CAAC;EAC/C,CAAC,MACI,IAAIE,IAAI,KAAK,MAAM,EAAE;IAAA,IAAAQ,qBAAA;IACxB;IACA,MAAMC,cAAc,GAAGV,iBAAiB,CAACW,IAAI,CAACP,CAAC,IAAIA,CAAC,CAACQ,IAAI,CAACC,MAAM,KAAKd,aAAa,CAAC;IACnF,MAAMe,cAAc,GAAGJ,cAAc,aAAdA,cAAc,wBAAAD,qBAAA,GAAdC,cAAc,CAAEK,KAAK,cAAAN,qBAAA,uBAArBA,qBAAA,CAAuBO,GAAG;IAEjD,MAAMd,iBAAiB,GAAGF,iBAAiB,CACxCG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACW,KAAK,IAAIX,CAAC,CAACW,KAAK,CAACC,GAAG,IAAIZ,CAAC,CAACQ,IAAI,CAACC,MAAM,KAAKd,aAAa,CAAC,CACtEO,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACW,KAAK,CAACC,GAAG,CAAC;IACxB,MAAMT,SAAS,GAAGV,OAAO,CAACK,iBAAiB,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,OAAOX,OAAO,CAAC,CAAC,GAAGU,SAAS,EAAEO,cAAc,CAAC,CAAC;EAChD;EAEA,OAAO,EAAE;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}