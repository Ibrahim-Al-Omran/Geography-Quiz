{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport StartScreen from './components/StartScreen';\nimport QuizContainer from './components/QuizContainer'; // Changed from QuizCard\nimport ResultScreen from './components/ResultScreen'; // Changed from FinishScreen\nimport useCountries from './hooks/useCountries';\nimport shuffle from \"./utils/shuffle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [options, setOptions] = useState([]);\n  const {\n    countries,\n    loading,\n    error\n  } = useCountries();\n  function setupQuiz() {\n    var _tenQuestions$, _tenQuestions$$capita;\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const firstCapital = ((_tenQuestions$ = tenQuestions[0]) === null || _tenQuestions$ === void 0 ? void 0 : (_tenQuestions$$capita = _tenQuestions$.capital) === null || _tenQuestions$$capita === void 0 ? void 0 : _tenQuestions$$capita[0]) || \"\";\n    setQuiz(tenQuestions);\n    setAnswer(firstCapital);\n    setOptions(generateOptions(firstCapital, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n  function handleAnswer(selected) {\n    document.activeElement.blur();\n    for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      const buttonText = optionButton.textContent;\n      if (buttonText === answer) {\n        optionButton.classList.add(\"correct\");\n      } else {\n        optionButton.classList.add(\"wrong\");\n      }\n    }\n    if (selected === answer) {\n      setScore(prev => prev + 1);\n      const liveScore = document.querySelector('.live-score');\n      const scoreValue = document.querySelector('.score-value');\n      if (liveScore) {\n        liveScore.classList.add('celebrate');\n        setTimeout(() => liveScore.classList.remove('celebrate'), 600);\n      }\n      if (scoreValue) {\n        scoreValue.classList.add('update');\n        setTimeout(() => scoreValue.classList.remove('update'), 600);\n      }\n    }\n    setTimeout(() => {\n      if (questionIdx < quiz.length - 1) {\n        var _quiz$nextIndex, _quiz$nextIndex$capit;\n        const nextIndex = questionIdx + 1;\n        const nextCapital = ((_quiz$nextIndex = quiz[nextIndex]) === null || _quiz$nextIndex === void 0 ? void 0 : (_quiz$nextIndex$capit = _quiz$nextIndex.capital) === null || _quiz$nextIndex$capit === void 0 ? void 0 : _quiz$nextIndex$capit[0]) || \"\";\n        setQuestionIdx(nextIndex);\n        setAnswer(nextCapital);\n        setOptions(generateOptions(nextCapital, countries));\n      } else {\n        setFinished(true);\n      }\n      for (let i = 0; i < 4; i++) {\n        const optionButton = document.getElementById(`option-${i}`);\n        optionButton.classList.remove(\"correct\", \"wrong\");\n      }\n    }, 1200);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorScreen, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), !started && !loading && !error && /*#__PURE__*/_jsxDEV(StartScreen, {\n      onStart: setupQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 42\n    }, this), started && !finished && /*#__PURE__*/_jsxDEV(QuizContainer, {\n      quiz: quiz,\n      questionIdx: questionIdx,\n      answer: answer,\n      options: options,\n      score: score,\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), finished && /*#__PURE__*/_jsxDEV(ResultScreen, {\n      score: score,\n      total: quiz.length,\n      onRestart: setupQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URxB/sqOmO8oiC9TV4aVlJfNZBw=\", false, function () {\n  return [useCountries];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartScreen","QuizContainer","ResultScreen","useCountries","shuffle","jsxDEV","_jsxDEV","App","_s","quiz","setQuiz","answer","setAnswer","score","setScore","questionIdx","setQuestionIdx","started","setStarted","finished","setFinished","options","setOptions","countries","loading","error","setupQuiz","_tenQuestions$","_tenQuestions$$capita","shuffled","tenQuestions","slice","firstCapital","capital","generateOptions","handleAnswer","selected","document","activeElement","blur","i","optionButton","getElementById","buttonText","textContent","classList","add","prev","liveScore","querySelector","scoreValue","setTimeout","remove","length","_quiz$nextIndex","_quiz$nextIndex$capit","nextIndex","nextCapital","className","children","Loading","fileName","_jsxFileName","lineNumber","columnNumber","ErrorScreen","onStart","onAnswer","total","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport StartScreen from './components/StartScreen';\nimport QuizContainer from './components/QuizContainer'; // Changed from QuizCard\nimport ResultScreen from './components/ResultScreen'; // Changed from FinishScreen\nimport useCountries from './hooks/useCountries';\nimport shuffle from \"./utils/shuffle\";\n\n\n\nfunction App() {\n  const [quiz, setQuiz] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [options, setOptions] = useState([]);\n  const { countries, loading, error } = useCountries();\n\n \n\n\n  function setupQuiz() {\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const firstCapital = tenQuestions[0]?.capital?.[0] || \"\";\n\n    setQuiz(tenQuestions);\n    setAnswer(firstCapital);\n    setOptions(generateOptions(firstCapital, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n\n  function handleAnswer(selected) {\n    document.activeElement.blur();\n    \n    for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      const buttonText = optionButton.textContent;\n      if (buttonText === answer) {\n        optionButton.classList.add(\"correct\");\n      } else {\n        optionButton.classList.add(\"wrong\");\n      }\n    }\n\n    if (selected === answer) {\n      setScore((prev) => prev + 1);\n      const liveScore = document.querySelector('.live-score');\n      const scoreValue = document.querySelector('.score-value');\n      if (liveScore) {\n        liveScore.classList.add('celebrate');\n        setTimeout(() => liveScore.classList.remove('celebrate'), 600);\n      }\n      if (scoreValue) {\n        scoreValue.classList.add('update');\n        setTimeout(() => scoreValue.classList.remove('update'), 600);\n      }\n    }\n\n    setTimeout(() => {\n      if (questionIdx < quiz.length - 1) {\n        const nextIndex = questionIdx + 1;\n        const nextCapital = quiz[nextIndex]?.capital?.[0] || \"\";\n        setQuestionIdx(nextIndex);\n        setAnswer(nextCapital);\n        setOptions(generateOptions(nextCapital, countries));\n      } else {\n        setFinished(true);\n      }\n      for (let i = 0; i < 4; i++) {\n        const optionButton = document.getElementById(`option-${i}`);\n        optionButton.classList.remove(\"correct\", \"wrong\");\n      }\n    }, 1200);\n  }\n\n  return (\n    <div className=\"app-container\">\n      {loading && <Loading />}\n      {error && <ErrorScreen error={error} />}\n      {!started && !loading && !error && <StartScreen onStart={setupQuiz} />}\n      {started && !finished && (\n        <QuizContainer\n          quiz={quiz}\n          questionIdx={questionIdx}\n          answer={answer}\n          options={options}\n          score={score}\n          onAnswer={handleAnswer}\n        />\n      )}\n      {finished && (\n        <ResultScreen\n          score={score}\n          total={quiz.length}\n          onRestart={setupQuiz}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}