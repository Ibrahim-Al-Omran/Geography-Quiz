{"ast":null,"code":"import React from'react';import styles from'./ProgressBar.module.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ProgressBar=_ref=>{let{current,total}=_ref;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.progressContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.progressBar,style:{width:\"\".concat((current+1)/total*100,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.progressText,children:[\"Question \",current+1,\" of \",total]})]});};export default ProgressBar;","map":{"version":3,"names":["React","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProgressBar","_ref","current","total","children","className","progressContainer","progressBar","style","width","concat","progressText"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/ProgressBar.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './ProgressBar.module.css';\n\nconst ProgressBar = ({ current, total }) => {\n  return (\n    <>\n      <div className={styles.progressContainer}>\n        <div\n          className={styles.progressBar}\n          style={{ width: `${((current + 1) / total) * 100}%` }}\n        ></div>\n      </div>\n      <div className={styles.progressText}>\n        Question {current + 1} of {total}\n      </div>\n    </>\n  );\n};\n\nexport default ProgressBar;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE9C,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAAF,IAAA,CACrC,mBACEJ,KAAA,CAAAE,SAAA,EAAAK,QAAA,eACET,IAAA,QAAKU,SAAS,CAAEZ,MAAM,CAACa,iBAAkB,CAAAF,QAAA,cACvCT,IAAA,QACEU,SAAS,CAAEZ,MAAM,CAACc,WAAY,CAC9BC,KAAK,CAAE,CAAEC,KAAK,IAAAC,MAAA,CAAM,CAACR,OAAO,CAAG,CAAC,EAAIC,KAAK,CAAI,GAAG,KAAI,CAAE,CAClD,CAAC,CACJ,CAAC,cACNN,KAAA,QAAKQ,SAAS,CAAEZ,MAAM,CAACkB,YAAa,CAAAP,QAAA,EAAC,WAC1B,CAACF,OAAO,CAAG,CAAC,CAAC,MAAI,CAACC,KAAK,EAC7B,CAAC,EACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}