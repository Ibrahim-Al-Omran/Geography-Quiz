{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\OptionsGrid.jsx\";\nimport React from 'react';\nimport styles from './OptionsGrid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionsGrid = ({\n  options,\n  onOptionClick,\n  correctAnswer,\n  selectedAnswer\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.optionsGrid,\n    children: options.map((option, idx) => {\n      let className = styles.optionButton;\n      if (selectedAnswer) {\n        if (option === correctAnswer) className += ` ${styles.correct}`;else if (option === selectedAnswer) className += ` ${styles.wrong}`;\n      }\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: className,\n        onClick: () => onOptionClick(option),\n        disabled: !!selectedAnswer,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = OptionsGrid;\nexport default OptionsGrid;\nvar _c;\n$RefreshReg$(_c, \"OptionsGrid\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","OptionsGrid","options","onOptionClick","correctAnswer","selectedAnswer","className","optionsGrid","children","map","option","idx","optionButton","correct","wrong","onClick","disabled","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/OptionsGrid.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './OptionsGrid.module.css';\r\n\r\nconst OptionsGrid = ({ options, onOptionClick, correctAnswer, selectedAnswer }) => {\r\n  return (\r\n    <div className={styles.optionsGrid}>\r\n      {options.map((option, idx) => {\r\n        let className = styles.optionButton;\r\n        if (selectedAnswer) {\r\n          if (option === correctAnswer) className += ` ${styles.correct}`;\r\n          else if (option === selectedAnswer) className += ` ${styles.wrong}`;\r\n        }\r\n        return (\r\n          <button\r\n            key={index}\r\n            className={className}\r\n            onClick={() => onOptionClick(option)}\r\n            disabled={!!selectedAnswer}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EACjF,oBACEL,OAAA;IAAKM,SAAS,EAAER,MAAM,CAACS,WAAY;IAAAC,QAAA,EAChCN,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;MAC5B,IAAIL,SAAS,GAAGR,MAAM,CAACc,YAAY;MACnC,IAAIP,cAAc,EAAE;QAClB,IAAIK,MAAM,KAAKN,aAAa,EAAEE,SAAS,IAAI,IAAIR,MAAM,CAACe,OAAO,EAAE,CAAC,KAC3D,IAAIH,MAAM,KAAKL,cAAc,EAAEC,SAAS,IAAI,IAAIR,MAAM,CAACgB,KAAK,EAAE;MACrE;MACA,oBACEd,OAAA;QAEEM,SAAS,EAAEA,SAAU;QACrBS,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACO,MAAM,CAAE;QACrCM,QAAQ,EAAE,CAAC,CAACX,cAAe;QAAAG,QAAA,EAE1BE;MAAM,GALFO,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMJ,CAAC;IAEb,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBIrB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}