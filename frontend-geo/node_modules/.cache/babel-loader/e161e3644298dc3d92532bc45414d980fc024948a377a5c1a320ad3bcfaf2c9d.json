{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\QuizContainer.jsx\";\nimport React from 'react';\nimport styles from './QuizContainer.module.css';\nimport FlagImage from './FlagImage';\nimport OptionsGrid from './OptionsGrid';\nimport ProgressBar from './ProgressBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizContainer({\n  quiz,\n  questionIdx,\n  answer,\n  options,\n  score,\n  onAnswer,\n  quizType = 'capital'\n}) {\n  if (!quiz.length) return null;\n  const current = quiz[questionIdx];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.card} ${styles.quizContainer}`,\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      current: questionIdx + 1,\n      total: quiz.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.progressText,\n      children: [\"Question \", questionIdx + 1, \" of \", quiz.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.liveScoreContainer,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.liveScore,\n        children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.scoreValue,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.totalAnswered,\n          children: questionIdx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), quizType === 'flag' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"Which flag belongs to \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 35\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n        options: options,\n        onAnswer: onAnswer,\n        renderOption: (option, idx) => {\n          var _countries$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `option-${idx}`,\n            className: styles.flagOption,\n            onClick: () => onAnswer(option),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_countries$find = countries.find(c => c.name.common === option)) === null || _countries$find === void 0 ? void 0 : _countries$find.flags.png,\n              alt: `Flag option ${idx + 1}`,\n              className: styles.optionFlag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), quizType === 'capital' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FlagImage, {\n        src: current.flags.png,\n        alt: `Flag of ${current.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the capital of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 36\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n        options: options,\n        onAnswer: onAnswer,\n        renderOption: (option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `option-${idx}`,\n          className: styles.optionButton,\n          onClick: () => onAnswer(option),\n          children: option\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = QuizContainer;\nexport default QuizContainer;\nvar _c;\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","styles","FlagImage","OptionsGrid","ProgressBar","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizContainer","quiz","questionIdx","answer","options","score","onAnswer","quizType","length","current","className","card","quizContainer","children","total","fileName","_jsxFileName","lineNumber","columnNumber","progressText","liveScoreContainer","liveScore","scoreValue","totalAnswered","question","questionHighlight","name","common","renderOption","option","idx","_countries$find","id","flagOption","onClick","src","countries","find","c","flags","png","alt","optionFlag","optionButton","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/QuizContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './QuizContainer.module.css';\r\nimport FlagImage from './FlagImage';\r\nimport OptionsGrid from './OptionsGrid';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nfunction QuizContainer({ quiz, questionIdx, answer, options, score, onAnswer, quizType = 'capital' }) {\r\n  if (!quiz.length) return null;\r\n  const current = quiz[questionIdx];\r\n\r\n  return (\r\n    <div className={`${styles.card} ${styles.quizContainer}`}>\r\n      {/* Progress Bar */}\r\n      <ProgressBar current={questionIdx + 1} total={quiz.length} />\r\n      \r\n      <p className={styles.progressText}>\r\n        Question {questionIdx + 1} of {quiz.length}\r\n      </p>\r\n      \r\n      {/* Live Score */}\r\n      <div className={styles.liveScoreContainer}>\r\n        <p className={styles.liveScore}>\r\n          Score: <span className={styles.scoreValue}>{score}</span> / <span className={styles.totalAnswered}>{questionIdx + 1}</span>\r\n        </p>\r\n      </div>\r\n\r\n      {/* For Flag Quiz: Show country name and ask for flag */}\r\n      {quizType === 'flag' && (\r\n        <>\r\n          <h2 className={styles.question}>\r\n            Which flag belongs to <span className={styles.questionHighlight}>{current.name.common}</span>?\r\n          </h2>\r\n          <OptionsGrid \r\n            options={options} \r\n            onAnswer={onAnswer} \r\n            renderOption={(option, idx) => (\r\n              <div key={idx} id={`option-${idx}`} className={styles.flagOption} onClick={() => onAnswer(option)}>\r\n                <img \r\n                  src={countries.find(c => c.name.common === option)?.flags.png} \r\n                  alt={`Flag option ${idx + 1}`} \r\n                  className={styles.optionFlag} \r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {/* For Capital Quiz: Show flag and ask for capital */}\r\n      {quizType === 'capital' && (\r\n        <>\r\n          <FlagImage src={current.flags.png} alt={`Flag of ${current.name.common}`} />\r\n          <h2 className={styles.question}>\r\n            What is the capital of <span className={styles.questionHighlight}>{current.name.common}</span>?\r\n          </h2>\r\n          <OptionsGrid \r\n            options={options} \r\n            onAnswer={onAnswer} \r\n            renderOption={(option, idx) => (\r\n              <button key={idx} id={`option-${idx}`} className={styles.optionButton} onClick={() => onAnswer(option)}>\r\n                {option}\r\n              </button>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}