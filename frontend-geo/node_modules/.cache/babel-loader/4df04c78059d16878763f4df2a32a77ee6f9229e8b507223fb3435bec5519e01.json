{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\").then(res => res.json()).then(data => {\n      const filtered = data.filter(c => {\n        var _c$flags;\n        return c.capital && c.capital[0] && ((_c$flags = c.flags) === null || _c$flags === void 0 ? void 0 : _c$flags.png);\n      });\n      setCountries(filtered);\n      setLoading(false);\n    }).catch(err => {\n      setError(\"Failed to fetch countries\");\n      setLoading(false);\n    });\n  }, []);\n\n  // Shuffle helper\n  function shuffle(arr) {\n    const array = arr.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  function setupQuiz() {\n    var _tenQuestions$, _tenQuestions$$capita;\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const firstCapital = ((_tenQuestions$ = tenQuestions[0]) === null || _tenQuestions$ === void 0 ? void 0 : (_tenQuestions$$capita = _tenQuestions$.capital) === null || _tenQuestions$$capita === void 0 ? void 0 : _tenQuestions$$capita[0]) || \"\";\n    setQuiz(tenQuestions);\n    setAnswer(firstCapital);\n    setOptions(generateOptions(firstCapital, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n  function renderQuestion() {\n    if (!quiz.length) return null;\n    const current = quiz[questionIdx];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${(questionIdx + 1) / quiz.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"progress-text\",\n        children: [\"Question \", questionIdx + 1, \" of \", quiz.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flag-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: current.flags.png,\n          alt: `Flag of ${current.name.common}`,\n          className: \"flag-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question\",\n        children: [\"What is the capital of\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"question-highlight\",\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-grid\",\n          children: [options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            id: `option-${idx}`,\n            className: \"option-button\",\n            onClick: () => handleAnswer(option),\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"live-score\",\n            children: [\"Current Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"score-value\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 54\n            }, this), \" / \", questionIdx, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  function handleAnswer(selected) {\n    // Remove focus from the clicked button to prevent focus ring from persisting\n    document.activeElement.blur();\n    for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      const buttonText = optionButton.textContent;\n      if (buttonText === answer) {\n        optionButton.classList.add(\"correct\");\n      } else {\n        optionButton.classList.add(\"wrong\");\n      }\n    }\n    if (selected === answer) {\n      setScore(prev => prev + 1);\n    }\n\n    // Move to next question after delay\n    setTimeout(() => {\n      if (questionIdx < quiz.length - 1) {\n        var _quiz$nextIndex, _quiz$nextIndex$capit;\n        const nextIndex = questionIdx + 1;\n        const nextCapital = ((_quiz$nextIndex = quiz[nextIndex]) === null || _quiz$nextIndex === void 0 ? void 0 : (_quiz$nextIndex$capit = _quiz$nextIndex.capital) === null || _quiz$nextIndex$capit === void 0 ? void 0 : _quiz$nextIndex$capit[0]) || \"\";\n        setQuestionIdx(nextIndex);\n        setAnswer(nextCapital);\n        setOptions(generateOptions(nextCapital, countries));\n      } else {\n        setFinished(true);\n      }\n      for (let i = 0; i < 4; i++) {\n        const optionButton = document.getElementById(`option-${i}`);\n        optionButton.classList.remove(\"correct\", \"wrong\");\n      }\n    }, 1500);\n  }\n  function generateOptions(correctCapital, allCountries) {\n    // Filter countries that have valid capitals and are NOT the correct answer\n    const validWrongChoices = allCountries.filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital).map(c => c.capital[0]);\n\n    // Shuffle and take first 3 incorrect options\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctCapital]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-text loading-text\",\n        children: \"Loading countries...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-text error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), !started && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Geography Trivia Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"intro-text\",\n          children: \"Test your knowledge of world capitals!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setupQuiz,\n          className: \"button-primary\",\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), started && !finished && renderQuestion(), finished && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score-text\",\n        children: [\"Your score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-value\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), \" / \", quiz.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setupQuiz,\n        className: \"button-primary\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kKEdIDoItX+AT7rZ5Y0DsQKcMxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","quiz","setQuiz","countries","setCountries","answer","setAnswer","score","setScore","questionIdx","setQuestionIdx","started","setStarted","finished","setFinished","loading","setLoading","error","setError","options","setOptions","fetch","then","res","json","data","filtered","filter","c","_c$flags","capital","flags","png","catch","err","shuffle","arr","array","slice","i","length","j","Math","floor","random","setupQuiz","_tenQuestions$","_tenQuestions$$capita","shuffled","tenQuestions","firstCapital","generateOptions","renderQuestion","current","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","name","common","map","option","idx","id","onClick","handleAnswer","selected","document","activeElement","blur","optionButton","getElementById","buttonText","textContent","classList","add","prev","setTimeout","_quiz$nextIndex","_quiz$nextIndex$capit","nextIndex","nextCapital","remove","correctCapital","allCountries","validWrongChoices","incorrect","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [quiz, setQuiz] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\")\n      .then((res) => res.json())\n      .then((data) => {\n        const filtered = data.filter(c => c.capital && c.capital[0] && c.flags?.png);\n        setCountries(filtered);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(\"Failed to fetch countries\");\n        setLoading(false);\n      });\n  }, []);\n\n  // Shuffle helper\n  function shuffle(arr) {\n    const array = arr.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  function setupQuiz() {\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const firstCapital = tenQuestions[0]?.capital?.[0] || \"\";\n\n    setQuiz(tenQuestions);\n    setAnswer(firstCapital);\n    setOptions(generateOptions(firstCapital, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n\n  function renderQuestion() {\n    if (!quiz.length) return null;\n    const current = quiz[questionIdx];\n\n    return (\n      <div className=\"card quiz-container\">\n        {/* Progress Bar */}\n        <div className=\"progress-container\">\n          <div \n            className=\"progress-bar\"\n            style={{ width: `${((questionIdx + 1) / quiz.length) * 100}%` }}\n          ></div>\n        </div>\n\n        {/* Progress Text */}\n        <p className=\"progress-text\">\n          Question {questionIdx + 1} of {quiz.length}\n        </p>\n\n        {/* Flag Container */}\n        <div className=\"flag-container\">\n          <img\n            src={current.flags.png}\n            alt={`Flag of ${current.name.common}`}\n            className=\"flag-image\"\n          />\n        </div>\n\n        {/* Question */}\n        <h2 className=\"question\">\n          What is the capital of{\" \"}\n          <span className=\"question-highlight\">{current.name.common}</span>?\n        </h2>\n\n        {/* Options Grid */}\n        <div className=\"options-container\">\n          <div className=\"options-grid\">\n            {options.map((option, idx) => (\n              <button\n                id={`option-${idx}`}\n                key={idx}\n                className=\"option-button\"\n                onClick={() => handleAnswer(option)}\n              >\n                {option}\n              </button>\n            ))}\n            <p className=\"live-score\">Current Score: <span className=\"score-value\">{score}</span> / {questionIdx} </p>\n            \n          </div>\n        </div>\n\n      </div>\n    );\n  }\n\n  function handleAnswer(selected) {\n    // Remove focus from the clicked button to prevent focus ring from persisting\n    document.activeElement.blur();\n    \n    for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      const buttonText = optionButton.textContent;\n      if (buttonText === answer) {\n        optionButton.classList.add(\"correct\");\n      } else {\n        optionButton.classList.add(\"wrong\");\n      }\n    }\n\n    if (selected === answer) {\n      setScore((prev) => prev + 1);\n    }\n\n    // Move to next question after delay\n    setTimeout(() => {\n      if (questionIdx < quiz.length - 1) {\n        const nextIndex = questionIdx + 1;\n        const nextCapital = quiz[nextIndex]?.capital?.[0] || \"\";\n\n        setQuestionIdx(nextIndex);\n        setAnswer(nextCapital);\n        setOptions(generateOptions(nextCapital, countries));\n      } else {\n        setFinished(true);\n      }\n      for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      optionButton.classList.remove(\"correct\", \"wrong\");\n      }\n    }, 1500);\n  }\n\n  function generateOptions(correctCapital, allCountries) {\n    // Filter countries that have valid capitals and are NOT the correct answer\n    const validWrongChoices = allCountries\n      .filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital)\n      .map(c => c.capital[0]);\n\n    // Shuffle and take first 3 incorrect options\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n\n    return shuffle([...incorrect, correctCapital]);\n  }\n\n  return (\n    <div className=\"app-container\">\n      {loading && (\n        <div className=\"card\">\n          <div className=\"status-text loading-text\">\n            Loading countries...\n          </div>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"card\">\n          <div className=\"status-text error-text\">\n            {error}\n          </div>\n        </div>\n      )}\n      \n      {!started && !loading && !error && (\n        <div className=\"card\">\n          <h1 className=\"title\">Geography Trivia Quiz</h1>\n          <div className=\"start-container\">\n            <p className=\"intro-text\">Test your knowledge of world capitals!</p>\n            <br></br>\n            <button \n              onClick={setupQuiz}\n              className=\"button-primary\"\n            >\n              Start Quiz\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {started && !finished && renderQuestion()}\n\n      {finished && (\n        <div className=\"card\">\n          <h2 className=\"title\">Quiz Finished!</h2>\n          <p className=\"score-text\">\n            Your score: <span className=\"score-value\">{score}</span> / {quiz.length}\n          </p>\n          <button \n            onClick={setupQuiz}\n            className=\"button-primary\"\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}