{"ast":null,"code":"import shuffle from './shuffle';\nexport default function generateOptions(correctCapital, allCountries, mode) {\n  if (mode === \"capital\") {\n    // Filter countries that have valid capitals and are NOT the correct answer\n    const validWrongChoices = allCountries.filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital).map(c => c.capital[0]);\n\n    // Shuffle and take first 3 incorrect options\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctCapital]);\n  }\n}","map":{"version":3,"names":["shuffle","generateOptions","correctCapital","allCountries","mode","validWrongChoices","filter","c","capital","map","incorrect","slice"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/utils/generateOptions.js"],"sourcesContent":["import shuffle from './shuffle';\r\nexport default function generateOptions(correctCapital, allCountries, mode) {\r\n  if (mode === \"capital\"){\r\n    // Filter countries that have valid capitals and are NOT the correct answer\r\n    const validWrongChoices = allCountries\r\n      .filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital)\r\n      .map(c => c.capital[0]);\r\n\r\n    // Shuffle and take first 3 incorrect options\r\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\r\n\r\n    return shuffle([...incorrect, correctCapital]);\r\n  }\r\n    \r\n  }"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,eAAe,SAASC,eAAeA,CAACC,cAAc,EAAEC,YAAY,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,KAAK,SAAS,EAAC;IACrB;IACA,MAAMC,iBAAiB,GAAGF,YAAY,CACnCG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,IAAID,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,KAAKN,cAAc,CAAC,CACzEO,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEzB;IACA,MAAME,SAAS,GAAGV,OAAO,CAACK,iBAAiB,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAExD,OAAOX,OAAO,CAAC,CAAC,GAAGU,SAAS,EAAER,cAAc,CAAC,CAAC;EAChD;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}