{"ast":null,"code":"import shuffle from './shuffle';\nexport default function generateOptions(correctAnswer, allCountries, mode) {\n  if (mode === \"capital\") {\n    // Filter countries that have valid capitals and are NOT the correct answer\n    const validWrongChoices = allCountries.filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital).map(c => c.capital[0]);\n\n    // Shuffle and take first 3 incorrect options\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctCapital]);\n  } else if (mode === \"flag\") {\n    const validWrongChoices = allCountries.filter(c => c.flags && c.flags.png && c.name.common !== correctFlag).map(c => c.flags.png);\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctFlag]);\n  }\n}","map":{"version":3,"names":["shuffle","generateOptions","correctAnswer","allCountries","mode","validWrongChoices","filter","c","capital","correctCapital","map","incorrect","slice","flags","png","name","common","correctFlag"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/utils/generateOptions.js"],"sourcesContent":["import shuffle from './shuffle';\r\nexport default function generateOptions(correctAnswer, allCountries, mode) {\r\n  if (mode === \"capital\"){\r\n    // Filter countries that have valid capitals and are NOT the correct answer\r\n    const validWrongChoices = allCountries\r\n      .filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital)\r\n      .map(c => c.capital[0]);\r\n\r\n    // Shuffle and take first 3 incorrect options\r\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\r\n\r\n    return shuffle([...incorrect, correctCapital]);\r\n  }\r\n  else if (mode === \"flag\"){\r\n    const validWrongChoices = allCountries\r\n      .filter(c => c.flags && c.flags.png && c.name.common !== correctFlag)\r\n      .map(c => c.flags.png);\r\n\r\n      const incorrect = shuffle(validWrongChoices).slice(0, 3);\r\n    return shuffle([...incorrect, correctFlag]);\r\n  }\r\n    \r\n  }"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,eAAe,SAASC,eAAeA,CAACC,aAAa,EAAEC,YAAY,EAAEC,IAAI,EAAE;EACzE,IAAIA,IAAI,KAAK,SAAS,EAAC;IACrB;IACA,MAAMC,iBAAiB,GAAGF,YAAY,CACnCG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,IAAID,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,KAAKC,cAAc,CAAC,CACzEC,GAAG,CAACH,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEzB;IACA,MAAMG,SAAS,GAAGX,OAAO,CAACK,iBAAiB,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAExD,OAAOZ,OAAO,CAAC,CAAC,GAAGW,SAAS,EAAEF,cAAc,CAAC,CAAC;EAChD,CAAC,MACI,IAAIL,IAAI,KAAK,MAAM,EAAC;IACvB,MAAMC,iBAAiB,GAAGF,YAAY,CACnCG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACM,KAAK,IAAIN,CAAC,CAACM,KAAK,CAACC,GAAG,IAAIP,CAAC,CAACQ,IAAI,CAACC,MAAM,KAAKC,WAAW,CAAC,CACpEP,GAAG,CAACH,CAAC,IAAIA,CAAC,CAACM,KAAK,CAACC,GAAG,CAAC;IAEtB,MAAMH,SAAS,GAAGX,OAAO,CAACK,iBAAiB,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,OAAOZ,OAAO,CAAC,CAAC,GAAGW,SAAS,EAAEM,WAAW,CAAC,CAAC;EAC7C;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}