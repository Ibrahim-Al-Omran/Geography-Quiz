{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport './components/global.css';\nimport StartScreen from './components/StartScreen';\nimport QuizContainer from './components/QuizContainer'; // Changed from QuizCard\nimport ResultScreen from './components/ResultScreen'; // Changed from FinishScreen\nimport useCountries from './hooks/useCountries';\nimport shuffle from \"./utils/shuffle\";\nimport generateOptions from \"./utils/generateOptions\";\nimport Loading from './components/Loading';\nimport ErrorScreen from './components/ErrorScreen'; // New component for error handling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  //initialize state variables\n  const [quiz, setQuiz] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [options, setOptions] = useState([]);\n  const {\n    countries,\n    loading,\n    error\n  } = useCountries();\n  const [mode, setMode] = useState(null);\n\n  //determine the type of quiz, and pass on all info\n  function setupQuiz() {\n    _s();\n    var _tenQuestions$, _tenQuestions$$capita, _tenQuestions$2, _tenQuestions$2$name;\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const correctAnswer = mode === \"capital\" ? ((_tenQuestions$ = tenQuestions[0]) === null || _tenQuestions$ === void 0 ? void 0 : (_tenQuestions$$capita = _tenQuestions$.capital) === null || _tenQuestions$$capita === void 0 ? void 0 : _tenQuestions$$capita[0]) || \"\" : ((_tenQuestions$2 = tenQuestions[0]) === null || _tenQuestions$2 === void 0 ? void 0 : (_tenQuestions$2$name = _tenQuestions$2.name) === null || _tenQuestions$2$name === void 0 ? void 0 : _tenQuestions$2$name.common) || \"\";\n    if (mode === \"flag\") {\n      setFlagQuiz(tenQuestions, correctAnswer);\n    }\n    if (mode === \"capital\") {\n      useCapitalQuiz(tenQuestions, correctAnswer);\n    }\n    setQuiz(tenQuestions);\n    setAnswer(correctAnswer);\n    setOptions(generateOptions(correctAnswer, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n  _s(setupQuiz, \"jqZR2GlT6ZOS721OqzN8v0K46KY=\", true);\n  function handleAnswer(selected) {\n    document.activeElement.blur();\n    for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      const buttonText = optionButton.textContent;\n      if (buttonText === answer) {\n        optionButton.classList.add(\"correct\");\n      } else {\n        optionButton.classList.add(\"wrong\");\n      }\n    }\n    if (selected === answer) {\n      setScore(prev => prev + 1);\n      const liveScore = document.querySelector('.live-score');\n      const scoreValue = document.querySelector('.score-value');\n      if (liveScore) {\n        liveScore.classList.add('celebrate');\n        setTimeout(() => liveScore.classList.remove('celebrate'), 600);\n      }\n      if (scoreValue) {\n        scoreValue.classList.add('update');\n        setTimeout(() => scoreValue.classList.remove('update'), 600);\n      }\n    }\n    setTimeout(() => {\n      if (questionIdx < quiz.length - 1) {\n        var _quiz$nextIndex, _quiz$nextIndex$capit;\n        const nextIndex = questionIdx + 1;\n        const nextCapital = ((_quiz$nextIndex = quiz[nextIndex]) === null || _quiz$nextIndex === void 0 ? void 0 : (_quiz$nextIndex$capit = _quiz$nextIndex.capital) === null || _quiz$nextIndex$capit === void 0 ? void 0 : _quiz$nextIndex$capit[0]) || \"\";\n        setQuestionIdx(nextIndex);\n        setAnswer(nextCapital);\n        setOptions(generateOptions(nextCapital, countries));\n      } else {\n        setFinished(true);\n      }\n      for (let i = 0; i < 4; i++) {\n        const optionButton = document.getElementById(`option-${i}`);\n        optionButton.classList.remove(\"correct\", \"wrong\");\n      }\n    }, 1200);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorScreen, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this), !started && !loading && !error && /*#__PURE__*/_jsxDEV(StartScreen, {\n        setMode: setMode,\n        onStart: setupQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 44\n      }, this), started && !finished && /*#__PURE__*/_jsxDEV(QuizContainer, {\n        quiz: quiz,\n        questionIdx: questionIdx,\n        answer: answer,\n        options: options,\n        score: score,\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), finished && /*#__PURE__*/_jsxDEV(ResultScreen, {\n        score: score,\n        total: quiz.length,\n        onRestart: setupQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"XnD9GOLju3p8it2n96UeOCd1ta8=\", false, function () {\n  return [useCountries];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartScreen","QuizContainer","ResultScreen","useCountries","shuffle","generateOptions","Loading","ErrorScreen","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","quiz","setQuiz","answer","setAnswer","score","setScore","questionIdx","setQuestionIdx","started","setStarted","finished","setFinished","options","setOptions","countries","loading","error","mode","setMode","setupQuiz","_tenQuestions$","_tenQuestions$$capita","_tenQuestions$2","_tenQuestions$2$name","shuffled","tenQuestions","slice","correctAnswer","capital","name","common","setFlagQuiz","useCapitalQuiz","handleAnswer","selected","document","activeElement","blur","i","optionButton","getElementById","buttonText","textContent","classList","add","prev","liveScore","querySelector","scoreValue","setTimeout","remove","length","_quiz$nextIndex","_quiz$nextIndex$capit","nextIndex","nextCapital","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onAnswer","total","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport './components/global.css';\nimport StartScreen from './components/StartScreen';\nimport QuizContainer from './components/QuizContainer'; // Changed from QuizCard\nimport ResultScreen from './components/ResultScreen'; // Changed from FinishScreen\nimport useCountries from './hooks/useCountries';\nimport shuffle from \"./utils/shuffle\";\nimport generateOptions from \"./utils/generateOptions\";\nimport Loading from './components/Loading';\nimport ErrorScreen from './components/ErrorScreen'; // New component for error handling\n\n\nfunction App() {\n  //initialize state variables\n  const [quiz, setQuiz] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [options, setOptions] = useState([]);\n  const { countries, loading, error } = useCountries();\n  const [mode, setMode] = useState(null);\n\n\n  //determine the type of quiz, and pass on all info\n  function setupQuiz() {\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const correctAnswer = \n      mode === \"capital\" ? \n      tenQuestions[0]?.capital?.[0] || \"\" :\n      tenQuestions[0]?.name?.common || \"\";\n\n    if (mode === \"flag\") {\n      setFlagQuiz(tenQuestions, correctAnswer);\n    }\n    if (mode === \"capital\") {\n      useCapitalQuiz(tenQuestions, correctAnswer);\n    }\n    setQuiz(tenQuestions);\n    setAnswer(correctAnswer);\n    setOptions(generateOptions(correctAnswer, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n\n  function handleAnswer(selected) {\n    document.activeElement.blur();\n    \n    for (let i = 0; i < 4; i++) {\n      const optionButton = document.getElementById(`option-${i}`);\n      const buttonText = optionButton.textContent;\n      if (buttonText === answer) {\n        optionButton.classList.add(\"correct\");\n      } else {\n        optionButton.classList.add(\"wrong\");\n      }\n    }\n\n    if (selected === answer) {\n      setScore((prev) => prev + 1);\n      const liveScore = document.querySelector('.live-score');\n      const scoreValue = document.querySelector('.score-value');\n      if (liveScore) {\n        liveScore.classList.add('celebrate');\n        setTimeout(() => liveScore.classList.remove('celebrate'), 600);\n      }\n      if (scoreValue) {\n        scoreValue.classList.add('update');\n        setTimeout(() => scoreValue.classList.remove('update'), 600);\n      }\n    }\n\n    setTimeout(() => {\n      if (questionIdx < quiz.length - 1) {\n        const nextIndex = questionIdx + 1;\n        const nextCapital = quiz[nextIndex]?.capital?.[0] || \"\";\n        setQuestionIdx(nextIndex);\n        setAnswer(nextCapital);\n        setOptions(generateOptions(nextCapital, countries));\n      } else {\n        setFinished(true);\n      }\n      for (let i = 0; i < 4; i++) {\n        const optionButton = document.getElementById(`option-${i}`);\n        optionButton.classList.remove(\"correct\", \"wrong\");\n      }\n    }, 1200);\n  }\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"card-container\">\n        {loading && <Loading />}\n        {error && <ErrorScreen error={error} />}\n        {!started && !loading && !error && <StartScreen setMode={setMode} onStart={setupQuiz} />}\n        {started && !finished && (\n          <QuizContainer\n            quiz={quiz}\n            questionIdx={questionIdx}\n            answer={answer}\n            options={options}\n            score={score}\n            onAnswer={handleAnswer}\n          />\n        )}\n        {finished && (\n          <ResultScreen\n            score={score}\n            total={quiz.length}\n            onRestart={setupQuiz}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}