{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\").then(res => res.json()).then(data => {\n      const filtered = data.filter(c => {\n        var _c$flags;\n        return c.capital && c.capital[0] && ((_c$flags = c.flags) === null || _c$flags === void 0 ? void 0 : _c$flags.png);\n      });\n      setCountries(filtered);\n      setLoading(false);\n    }).catch(err => {\n      setError(\"Failed to fetch countries\");\n      setLoading(false);\n    });\n  }, []);\n\n  // Shuffle helper\n  function shuffle(arr) {\n    const array = arr.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  function setupQuiz() {\n    var _tenQuestions$, _tenQuestions$$capita;\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const firstCapital = ((_tenQuestions$ = tenQuestions[0]) === null || _tenQuestions$ === void 0 ? void 0 : (_tenQuestions$$capita = _tenQuestions$.capital) === null || _tenQuestions$$capita === void 0 ? void 0 : _tenQuestions$$capita[0]) || \"\";\n    setQuiz(tenQuestions);\n    setAnswer(firstCapital);\n    setOptions(generateOptions(firstCapital, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n  function renderQuestion() {\n    if (!quiz.length) return null;\n    const current = quiz[questionIdx];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: current.flags.png,\n        alt: `Flag of ${current.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What is the capital of this country?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  function handleAnswer(option) {\n    if (option === answer) {\n      setScore(prev => prev + 1);\n    }\n    if (questionIdx < quiz.length - 1) {\n      var _quiz$nextIndex, _quiz$nextIndex$capit;\n      const nextIndex = questionIdx + 1;\n      const nextCapital = ((_quiz$nextIndex = quiz[nextIndex]) === null || _quiz$nextIndex === void 0 ? void 0 : (_quiz$nextIndex$capit = _quiz$nextIndex.capital) === null || _quiz$nextIndex$capit === void 0 ? void 0 : _quiz$nextIndex$capit[0]) || \"\";\n      setQuestionIdx(nextIndex);\n      setAnswer(nextCapital);\n      setOptions(generateOptions(nextCapital, countries));\n    } else {\n      setFinished(true);\n    }\n  }\n  function generateOptions(correctCapital, allCountries) {\n    // Filter countries that have valid capitals and are NOT the correct answer\n    const validWrongChoices = allCountries.filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital).map(c => c.capital[0]);\n\n    // Shuffle and take first 3 incorrect options\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n    return shuffle([...incorrect, correctCapital]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading countries...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), !started && !loading && !error && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setupQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), started && !finished && renderQuestion(), finished && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \" / \", quiz.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setupQuiz,\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kKEdIDoItX+AT7rZ5Y0DsQKcMxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","quiz","setQuiz","countries","setCountries","answer","setAnswer","score","setScore","questionIdx","setQuestionIdx","started","setStarted","finished","setFinished","loading","setLoading","error","setError","options","setOptions","fetch","then","res","json","data","filtered","filter","c","_c$flags","capital","flags","png","catch","err","shuffle","arr","array","slice","i","length","j","Math","floor","random","setupQuiz","_tenQuestions$","_tenQuestions$$capita","shuffled","tenQuestions","firstCapital","generateOptions","renderQuestion","current","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","name","common","map","option","idx","onClick","handleAnswer","prev","_quiz$nextIndex","_quiz$nextIndex$capit","nextIndex","nextCapital","correctCapital","allCountries","validWrongChoices","incorrect","className","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [quiz, setQuiz] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const[options, setOptions] = useState([])\n\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\")\n      .then((res) => res.json())\n      .then((data) => {\n        const filtered = data.filter(c => c.capital && c.capital[0] && c.flags?.png);\n        setCountries(filtered);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(\"Failed to fetch countries\");\n        setLoading(false);\n      });\n  }, []);\n\n  // Shuffle helper\n  function shuffle(arr) {\n    const array = arr.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  function setupQuiz() {\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    const firstCapital = tenQuestions[0]?.capital?.[0] || \"\";\n\n    setQuiz(tenQuestions);\n    setAnswer(firstCapital);\n    setOptions(generateOptions(firstCapital, countries));\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n\n\n  function renderQuestion(){\n    if(!quiz.length) return null;\n    const current = quiz[questionIdx];\n\n    return (\n      <div>\n        <p>\n          \n        </p>\n        <img src={current.flags.png} alt={`Flag of ${current.name.common}`} />\n        <h2>What is the capital of this country?</h2>\n        {options.map((option, idx) => (\n          <button key={idx} onClick={() => handleAnswer(option)}>\n            {option}\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  function handleAnswer(option) {\n    if (option === answer) {\n      setScore(prev => prev + 1);\n    }\n\n    if (questionIdx < quiz.length - 1) {\n      const nextIndex = questionIdx + 1;\n      const nextCapital = quiz[nextIndex]?.capital?.[0] || \"\";\n\n      setQuestionIdx(nextIndex);\n      setAnswer(nextCapital);\n      setOptions(generateOptions(nextCapital, countries));\n    } else {\n      setFinished(true);\n    }\n  }\n\n\n  function generateOptions(correctCapital, allCountries) {\n    // Filter countries that have valid capitals and are NOT the correct answer\n    const validWrongChoices = allCountries\n      .filter(c => c.capital && c.capital[0] && c.capital[0] !== correctCapital)\n      .map(c => c.capital[0]);\n\n    // Shuffle and take first 3 incorrect options\n    const incorrect = shuffle(validWrongChoices).slice(0, 3);\n\n    return shuffle([...incorrect, correctCapital]);\n  }\n\n  return (\n    <div className=\"App\">\n      {loading && <p>Loading countries...</p>}\n      {error && <p>{error}</p>}\n      {!started && !loading && !error && (\n        <button onClick={setupQuiz}>Start Quiz</button>\n      )}\n      {started && !finished && renderQuestion()}\n\n      {finished && (\n      <div>\n        <h2>Quiz Finished!</h2>\n        <p>Your score: {score} / {quiz.length}</p>\n        <button onClick={setupQuiz}>Restart Quiz</button>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}