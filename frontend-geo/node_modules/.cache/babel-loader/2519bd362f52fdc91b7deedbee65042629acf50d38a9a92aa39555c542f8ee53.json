{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\StartScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './StartScreen.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartScreen = ({\n  onStart,\n  regions\n}) => {\n  _s();\n  const [selectedRegion, setSelectedRegion] = useState(\"All\");\n  const handleStart = mode => {\n    onStart(mode, selectedRegion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Geography Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"region-label\",\n      children: [\"Select Region:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedRegion,\n        onChange: e => setSelectedRegion(e.target.value),\n        className: styles.dropdown,\n        children: regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-stack\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stacked-button\",\n        onClick: () => handleStart(\"flag\"),\n        children: \"Guess the Flag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stacked-button\",\n        onClick: () => handleStart(\"capital\"),\n        children: \"Guess the Capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(StartScreen, \"tX7XO/KXrGYjcl71zgV+hvONlT4=\");\n_c = StartScreen;\nexport default StartScreen;\nvar _c;\n$RefreshReg$(_c, \"StartScreen\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","StartScreen","onStart","regions","_s","selectedRegion","setSelectedRegion","handleStart","mode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","dropdown","map","region","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/StartScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './StartScreen.module.css';\n\nconst StartScreen = ({ onStart, regions }) => {\n  const [selectedRegion, setSelectedRegion] = useState(\"All\");\n\n  const handleStart = (mode) => {\n    onStart(mode, selectedRegion);\n  };\n\n  return (\n    <div className=\"card-container\">\n      <h2 className=\"title\">Geography Quiz</h2>\n      \n      <label className=\"region-label\">\n        Select Region:\n        <select\n          value={selectedRegion}\n          onChange={(e) => setSelectedRegion(e.target.value)}\n          className={styles.dropdown}\n        >\n          {regions.map(region => (\n            <option key={region} value={region}>{region}</option>\n          ))}\n        </select>\n      </label>\n      \n      <div className=\"button-stack\">  {/* This wrapper is crucial */}\n        <button className=\"stacked-button\" onClick={() => handleStart(\"flag\")}>Guess the Flag</button>\n        <button className=\"stacked-button\" onClick={() => handleStart(\"capital\")}>Guess the Capital</button>\n      </div>\n    </div>\n  );\n};\n\nexport default StartScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMU,WAAW,GAAIC,IAAI,IAAK;IAC5BN,OAAO,CAACM,IAAI,EAAEH,cAAc,CAAC;EAC/B,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BV,OAAA;MAAIS,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzCd,OAAA;MAAOS,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,gBAE9B,eAAAV,OAAA;QACEe,KAAK,EAAEV,cAAe;QACtBW,QAAQ,EAAGC,CAAC,IAAKX,iBAAiB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnDN,SAAS,EAAEX,MAAM,CAACqB,QAAS;QAAAT,QAAA,EAE1BP,OAAO,CAACiB,GAAG,CAACC,MAAM,iBACjBrB,OAAA;UAAqBe,KAAK,EAAEM,MAAO;UAAAX,QAAA,EAAEW;QAAM,GAA9BA,MAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC,CACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAERd,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,IAAE,eAC9BV,OAAA;QAAQS,SAAS,EAAC,gBAAgB;QAACa,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,MAAM,CAAE;QAAAG,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9Fd,OAAA;QAAQS,SAAS,EAAC,gBAAgB;QAACa,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,SAAS,CAAE;QAAAG,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CA9BIH,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}