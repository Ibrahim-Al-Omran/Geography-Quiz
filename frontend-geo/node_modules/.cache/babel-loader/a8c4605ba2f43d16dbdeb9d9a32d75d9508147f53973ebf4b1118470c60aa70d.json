{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\OptionsGrid.jsx\";\nimport React from 'react';\nimport styles from './OptionsGrid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionsGrid = ({\n  options,\n  onOptionClick,\n  correctAnswer,\n  selectedAnswer\n}) => {\n  if (mode === \"capital\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.optionsGrid,\n      children: options === null || options === void 0 ? void 0 : options.map((option, index) => {\n        let className = styles.optionButton;\n        if (selectedAnswer) {\n          if (option === correctAnswer) className += ` ${styles.correct}`;else if (option === selectedAnswer) className += ` ${styles.wrong}`;\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `option-${index}`,\n          className: className,\n          onClick: () => onOptionClick(option),\n          disabled: !!selectedAnswer,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else if (mode === \"flag\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.optionsGrid,\n      children: options === null || options === void 0 ? void 0 : options.map((option, index) => {\n        let className = styles.optionFlag - image;\n        if (selectedAnswer) {\n          if (option === correctAnswer) className += ` ${styles.correct}`;else if (option === selectedAnswer) className += ` ${styles.wrong}`;\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `option-${index}`,\n          className: className,\n          onClick: () => onOptionClick(option),\n          disabled: !!selectedAnswer,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = OptionsGrid;\nexport default OptionsGrid;\nvar _c;\n$RefreshReg$(_c, \"OptionsGrid\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","OptionsGrid","options","onOptionClick","correctAnswer","selectedAnswer","mode","className","optionsGrid","children","map","option","index","optionButton","correct","wrong","id","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","optionFlag","image","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/OptionsGrid.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './OptionsGrid.module.css';\r\n\r\nconst OptionsGrid = ({ options, onOptionClick, correctAnswer, selectedAnswer }) => {\r\n  if (mode === \"capital\") {\r\n    return (\r\n      <div className={styles.optionsGrid}>\r\n        {options?.map((option, index) => {\r\n          let className = styles.optionButton;\r\n          if (selectedAnswer) {\r\n            if (option === correctAnswer) className += ` ${styles.correct}`;\r\n            else if (option === selectedAnswer) className += ` ${styles.wrong}`;\r\n          }\r\n          return (\r\n            <button\r\n              id={`option-${index}`}\r\n              key={index}\r\n              className={className}\r\n              onClick={() => onOptionClick(option)}\r\n              disabled={!!selectedAnswer}\r\n            >\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  else if (mode === \"flag\"){\r\n    return (\r\n      <div className={styles.optionsGrid}>\r\n        {options?.map((option, index) => {\r\n          let className = styles.optionFlag-image;\r\n          if (selectedAnswer) {\r\n            if (option === correctAnswer) className += ` ${styles.correct}`;\r\n            else if (option === selectedAnswer) className += ` ${styles.wrong}`;\r\n          }\r\n          return (\r\n            <button\r\n              id={`option-${index}`}\r\n              key={index}\r\n              className={className}\r\n              onClick={() => onOptionClick(option)}\r\n              disabled={!!selectedAnswer}\r\n            >\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default OptionsGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EACjF,IAAIC,IAAI,KAAK,SAAS,EAAE;IACtB,oBACEN,OAAA;MAAKO,SAAS,EAAET,MAAM,CAACU,WAAY;MAAAC,QAAA,EAChCP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC/B,IAAIL,SAAS,GAAGT,MAAM,CAACe,YAAY;QACnC,IAAIR,cAAc,EAAE;UAClB,IAAIM,MAAM,KAAKP,aAAa,EAAEG,SAAS,IAAI,IAAIT,MAAM,CAACgB,OAAO,EAAE,CAAC,KAC3D,IAAIH,MAAM,KAAKN,cAAc,EAAEE,SAAS,IAAI,IAAIT,MAAM,CAACiB,KAAK,EAAE;QACrE;QACA,oBACEf,OAAA;UACEgB,EAAE,EAAE,UAAUJ,KAAK,EAAG;UAEtBL,SAAS,EAAEA,SAAU;UACrBU,OAAO,EAAEA,CAAA,KAAMd,aAAa,CAACQ,MAAM,CAAE;UACrCO,QAAQ,EAAE,CAAC,CAACb,cAAe;UAAAI,QAAA,EAE1BE;QAAM,GALFC,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMJ,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC,MACI,IAAIhB,IAAI,KAAK,MAAM,EAAC;IACvB,oBACEN,OAAA;MAAKO,SAAS,EAAET,MAAM,CAACU,WAAY;MAAAC,QAAA,EAChCP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC/B,IAAIL,SAAS,GAAGT,MAAM,CAACyB,UAAU,GAACC,KAAK;QACvC,IAAInB,cAAc,EAAE;UAClB,IAAIM,MAAM,KAAKP,aAAa,EAAEG,SAAS,IAAI,IAAIT,MAAM,CAACgB,OAAO,EAAE,CAAC,KAC3D,IAAIH,MAAM,KAAKN,cAAc,EAAEE,SAAS,IAAI,IAAIT,MAAM,CAACiB,KAAK,EAAE;QACrE;QACA,oBACEf,OAAA;UACEgB,EAAE,EAAE,UAAUJ,KAAK,EAAG;UAEtBL,SAAS,EAAEA,SAAU;UACrBU,OAAO,EAAEA,CAAA,KAAMd,aAAa,CAACQ,MAAM,CAAE;UACrCO,QAAQ,EAAE,CAAC,CAACb,cAAe;UAAAI,QAAA,EAE1BE;QAAM,GALFC,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMJ,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF,CAAC;AAACG,EAAA,GAjDIxB,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}