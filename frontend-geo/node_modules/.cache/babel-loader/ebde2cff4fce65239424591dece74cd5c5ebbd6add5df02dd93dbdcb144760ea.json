{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quiz, setQuiz] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\").then(res => res.json()).then(data => {\n      setCountries(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(\"Failed to fetch countries\");\n      setLoading(false);\n    });\n  }, []);\n\n  // Shuffle helper\n  function shuffle(arr) {\n    const array = arr.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  function setupQuiz() {\n    var _tenQuestions$, _tenQuestions$$capita;\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    setQuiz(tenQuestions);\n    setAnswer(((_tenQuestions$ = tenQuestions[0]) === null || _tenQuestions$ === void 0 ? void 0 : (_tenQuestions$$capita = _tenQuestions$.capital) === null || _tenQuestions$$capita === void 0 ? void 0 : _tenQuestions$$capita[0]) || \"\"); // some capitals are arrays\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n  function renderQuestion() {\n    if (!quiz.length) return null;\n    const current = quiz[questionIdx];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: current.flags.png,\n        alt: `Flag of ${current.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What is the capital of this country?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  function handleAnswer(option) {\n    if (option === answer) {\n      setScore(prev => prev + 1);\n    }\n    if (questionIdx < 9) {\n      var _quiz$nextIndex, _quiz$nextIndex$capit;\n      const nextIndex = questionIdx + 1;\n      setQuestionIdx(nextIndex);\n      setAnswer(((_quiz$nextIndex = quiz[nextIndex]) === null || _quiz$nextIndex === void 0 ? void 0 : (_quiz$nextIndex$capit = _quiz$nextIndex.capital) === null || _quiz$nextIndex$capit === void 0 ? void 0 : _quiz$nextIndex$capit[0]) || \"\");\n      // also: regenerate new options here if needed\n    } else {\n      setFinished(true);\n    }\n  }\n  function generateOptions(correctCapital, allCountries) {\n    const incorrect = [];\n    while (incorrect.length < 3) {\n      var _randomCountry$capita;\n      const rand = allCountries[Math.floor(Math.random() * allCountries.length)];\n      const capital = (_randomCountry$capita = randomCountry.capital) === null || _randomCountry$capita === void 0 ? void 0 : _randomCountry$capita[0];\n      if (capital && capital !== correctCapital && !incorrect.includes(capital)) {\n        incorrect.push(capital);\n      }\n    }\n    const options = [...incorrect, correctCapital];\n    const arr = shuffle(options);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading countries...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), !started && !loading && !error && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setupQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), started && !finished && renderQuestion()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"luRcVGvtBYcVdaTE8jytNqwn5ek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","quiz","setQuiz","countries","setCountries","answer","setAnswer","score","setScore","questionIdx","setQuestionIdx","started","setStarted","finished","setFinished","loading","setLoading","error","setError","fetch","then","res","json","data","catch","err","shuffle","arr","array","slice","i","length","j","Math","floor","random","setupQuiz","_tenQuestions$","_tenQuestions$$capita","shuffled","tenQuestions","capital","renderQuestion","current","children","src","flags","png","alt","name","common","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","idx","onClick","handleAnswer","prev","_quiz$nextIndex","_quiz$nextIndex$capit","nextIndex","generateOptions","correctCapital","allCountries","incorrect","_randomCountry$capita","rand","randomCountry","includes","push","className","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [quiz, setQuiz] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCountries(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(\"Failed to fetch countries\");\n        setLoading(false);\n      });\n  }, []);\n\n  // Shuffle helper\n  function shuffle(arr) {\n    const array = arr.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  function setupQuiz() {\n    const shuffled = shuffle(countries);\n    const tenQuestions = shuffled.slice(0, 10);\n    setQuiz(tenQuestions);\n    setAnswer(tenQuestions[0]?.capital?.[0] || \"\"); // some capitals are arrays\n    setQuestionIdx(0);\n    setScore(0);\n    setStarted(true);\n    setFinished(false);\n  }\n\n  function renderQuestion(){\n    if(!quiz.length) return null;\n    const current = quiz[questionIdx];\n\n    return (\n      <div>\n        <img src={current.flags.png} alt={`Flag of ${current.name.common}`} />\n        <h2>What is the capital of this country?</h2>\n        {options.map((option, idx) => (\n          <button key={idx} onClick={() => handleAnswer(option)}>\n            {option}\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  function handleAnswer(option) {\n    if (option === answer) {\n      setScore(prev => prev + 1);\n    }\n    if (questionIdx < 9) {\n      const nextIndex = questionIdx + 1;\n      setQuestionIdx(nextIndex);\n      setAnswer(quiz[nextIndex]?.capital?.[0] || \"\");\n      // also: regenerate new options here if needed\n    } \n    else {\n      setFinished(true);\n    }\n  }\n\n  function generateOptions(correctCapital, allCountries){\n    const incorrect=[];\n\n    while(incorrect.length<3){\n      const rand = allCountries[Math.floor(Math.random()* allCountries.length)];\n      const capital=randomCountry.capital?.[0];\n\n      if(capital && capital!==correctCapital && !incorrect.includes(capital)){\n        incorrect.push(capital);\n      }\n    }\n    const options=[...incorrect, correctCapital];\n    const arr = shuffle(options);\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loading && <p>Loading countries...</p>}\n      {error && <p>{error}</p>}\n      {!started && !loading && !error && (\n        <button onClick={setupQuiz}>Start Quiz</button>\n      )}\n      {started && !finished && renderQuestion()}\n\n      {/* TODO: Show question, options, handle answer, and show results */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}