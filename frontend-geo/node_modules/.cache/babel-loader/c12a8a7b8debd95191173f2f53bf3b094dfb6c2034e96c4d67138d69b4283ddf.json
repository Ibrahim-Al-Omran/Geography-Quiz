{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\StartScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './StartScreen.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartScreen = ({\n  onStart,\n  regions\n}) => {\n  _s();\n  const [selectedRegion, setSelectedRegion] = useState(\"All\");\n  const handleStart = mode => {\n    onStart(mode, selectedRegion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Geography Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [\"Select Region:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedRegion,\n        onChange: e => setSelectedRegion(e.target.value),\n        className: styles.dropdown,\n        children: regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.buttonPrimary,\n        onClick: () => handleStart(\"flag\"),\n        children: \"Guess the Flag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.buttonPrimary,\n        onClick: () => handleStart(\"capital\"),\n        children: \"Guess the Capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(StartScreen, \"tX7XO/KXrGYjcl71zgV+hvONlT4=\");\n_c = StartScreen;\nexport default StartScreen;\nvar _c;\n$RefreshReg$(_c, \"StartScreen\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","StartScreen","onStart","regions","_s","selectedRegion","setSelectedRegion","handleStart","mode","className","card","children","title","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","dropdown","map","region","buttonContainer","buttonPrimary","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/StartScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './StartScreen.module.css';\r\n\r\nconst StartScreen = ({ onStart, regions }) => {\r\n  const [selectedRegion, setSelectedRegion] = useState(\"All\");\r\n\r\n  const handleStart = (mode) => {\r\n    onStart(mode, selectedRegion);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <h1 className={styles.title}>Geography Quiz</h1>\r\n\r\n      <label className={styles.label}>\r\n        Select Region:\r\n        <select\r\n          value={selectedRegion}\r\n          onChange={(e) => setSelectedRegion(e.target.value)}\r\n          className={styles.dropdown}\r\n        >\r\n          {regions.map(region => (\r\n            <option key={region} value={region}>{region}</option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <div className={styles.buttonContainer}>\r\n        <button className={styles.buttonPrimary} onClick={() => handleStart(\"flag\")}>Guess the Flag</button>\r\n        <button className={styles.buttonPrimary} onClick={() => handleStart(\"capital\")}>Guess the Capital</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMU,WAAW,GAAIC,IAAI,IAAK;IAC5BN,OAAO,CAACM,IAAI,EAAEH,cAAc,CAAC;EAC/B,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACY,IAAK;IAAAC,QAAA,gBAC1BX,OAAA;MAAIS,SAAS,EAAEX,MAAM,CAACc,KAAM;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhDhB,OAAA;MAAOS,SAAS,EAAEX,MAAM,CAACmB,KAAM;MAAAN,QAAA,GAAC,gBAE9B,eAAAX,OAAA;QACEkB,KAAK,EAAEb,cAAe;QACtBc,QAAQ,EAAGC,CAAC,IAAKd,iBAAiB,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnDT,SAAS,EAAEX,MAAM,CAACwB,QAAS;QAAAX,QAAA,EAE1BR,OAAO,CAACoB,GAAG,CAACC,MAAM,iBACjBxB,OAAA;UAAqBkB,KAAK,EAAEM,MAAO;UAAAb,QAAA,EAAEa;QAAM,GAA9BA,MAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC,CACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAERhB,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAAC2B,eAAgB;MAAAd,QAAA,gBACrCX,OAAA;QAAQS,SAAS,EAAEX,MAAM,CAAC4B,aAAc;QAACC,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAAC,MAAM,CAAE;QAAAI,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpGhB,OAAA;QAAQS,SAAS,EAAEX,MAAM,CAAC4B,aAAc;QAACC,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAAC,SAAS,CAAE;QAAAI,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA9BIH,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}