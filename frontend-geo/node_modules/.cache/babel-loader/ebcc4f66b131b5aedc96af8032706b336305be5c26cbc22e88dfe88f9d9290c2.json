{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\QuizContainer.jsx\";\nimport React from 'react';\nimport styles from './QuizContainer.module.css';\nimport FlagImage from './FlagImage';\nimport ProgressBar from './ProgressBar';\nimport OptionsGrid from './OptionsGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizContainer({\n  mode,\n  current,\n  questionIdx,\n  quiz,\n  answer,\n  options,\n  score,\n  handleAnswer,\n  selectedAnswer,\n  scoreCelebration,\n  onBack\n}) {\n  if (mode === \"flag\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.card} ${styles.quizContainer} ${mode === \"flag\" ? styles.flagModeCard : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.backButton,\n        onClick: onBack,\n        children: \"\\u2190 Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: questionIdx,\n        total: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the flag of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: [current.name.common, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n        options: options,\n        onOptionClick: handleAnswer,\n        correctAnswer: answer,\n        selectedAnswer: selectedAnswer,\n        mode: \"flag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.liveScoreContainer,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${styles.liveScore} ${scoreCelebration ? styles.celebrate : \"\"}`,\n          children: [\"Score: \", score, \"/\", questionIdx + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else if (mode === \"capital\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.card} ${styles.quizContainer}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.backButton,\n        onClick: onBack,\n        children: \"\\u2190 Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: questionIdx,\n        total: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlagImage, {\n        src: current.flags.png,\n        alt: `Flag of ${current.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the capital of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: [current.name.common, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n        options: options,\n        onOptionClick: handleAnswer,\n        correctAnswer: answer,\n        selectedAnswer: selectedAnswer,\n        mode: \"capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.liveScoreContainer,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${styles.liveScore} ${scoreCelebration ? styles.celebrate : \"\"}`,\n          children: [\"Score: \", score, \"/\", questionIdx + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = QuizContainer;\nexport default QuizContainer;\nvar _c;\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","styles","FlagImage","ProgressBar","OptionsGrid","jsxDEV","_jsxDEV","QuizContainer","mode","current","questionIdx","quiz","answer","options","score","handleAnswer","selectedAnswer","scoreCelebration","onBack","className","card","quizContainer","flagModeCard","children","backButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","total","length","question","questionHighlight","name","common","onOptionClick","correctAnswer","liveScoreContainer","liveScore","celebrate","src","flags","png","alt","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/QuizContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './QuizContainer.module.css';\r\nimport FlagImage from './FlagImage'; \r\nimport ProgressBar from './ProgressBar';\r\nimport OptionsGrid from './OptionsGrid';\r\n\r\nfunction QuizContainer({mode, \r\n  current, \r\n  questionIdx, \r\n  quiz, \r\n  answer, \r\n  options, \r\n  score, \r\n  handleAnswer, \r\n  selectedAnswer,\r\n  scoreCelebration,\r\n  onBack  }) {  if (mode === \"flag\") {\r\n    return (\r\n      <div className={`${styles.card} ${styles.quizContainer} ${mode === \"flag\" ? styles.flagModeCard : \"\"}`}>\r\n        {/* Back Button */}\r\n        <button className={styles.backButton} onClick={onBack}>\r\n          ← Back to Menu\r\n        </button>\r\n        \r\n        {/* Progress Bar */}\r\n        <ProgressBar current={questionIdx} total={quiz.length} />\r\n\r\n        {/* Question, options, etc. */}\r\n        <h2 className={styles.question}>\r\n          What is the flag of <span className={styles.questionHighlight}>{current.name.common}?</span>\r\n        </h2>\r\n        <OptionsGrid \r\n          options={options}\r\n          onOptionClick={handleAnswer}\r\n          correctAnswer={answer}\r\n          selectedAnswer={selectedAnswer}\r\n          mode={\"flag\"}\r\n        />\r\n        {/* Live Score */}\r\n        <div className={styles.liveScoreContainer}>\r\n          <span className={`${styles.liveScore} ${scoreCelebration ? styles.celebrate : \"\"}`}>\r\n\r\n            Score: {score}/{questionIdx+1}\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }  else if (mode === \"capital\") {\r\n    return (\r\n      <div className={`${styles.card} ${styles.quizContainer}`}>\r\n        {/* Back Button */}\r\n        <button className={styles.backButton} onClick={onBack}>\r\n          ← Back to Menu\r\n        </button>\r\n        \r\n        <ProgressBar current={questionIdx} \r\n                     total={quiz.length} />\r\n        <FlagImage src={current.flags.png} \r\n                   alt={`Flag of ${current.name.common}`} />\r\n        <h2 className={styles.question}>\r\n          What is the capital of <span className={styles.questionHighlight}>{current.name.common}?</span>\r\n        </h2> \r\n        <OptionsGrid \r\n          options={options}\r\n          onOptionClick={handleAnswer}\r\n          correctAnswer={answer}\r\n          selectedAnswer={selectedAnswer}\r\n          mode={\"capital\"}\r\n        />\r\n        {/* Live Score */}\r\n        <div className={styles.liveScoreContainer}>\r\n          <span className={`${styles.liveScore} ${scoreCelebration ? styles.celebrate : \"\"}`}>\r\n\r\n            Score: {score}/{questionIdx+1}\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}