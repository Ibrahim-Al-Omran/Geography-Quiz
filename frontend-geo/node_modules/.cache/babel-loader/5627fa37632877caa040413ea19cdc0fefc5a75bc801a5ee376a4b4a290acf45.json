{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\QuizContainer.jsx\";\nimport React from 'react';\nimport styles from './QuizContainer.module.css';\nimport FlagImage from './FlagImage';\nimport ProgressBar from './ProgressBar';\nimport OptionsGrid from './OptionsGrid'; // Assuming you have an OptionsGrid component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizContainer({\n  mode,\n  current,\n  questionIdx,\n  quiz,\n  answer,\n  options,\n  onAnswer,\n  score\n}) {\n  if (mode === \"flag\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.card} ${styles.quizContainer}`,\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: questionIdx,\n        total: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the flag of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  } else if (mode === \"capital\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.card} ${styles.quizContainer}`,\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: questionIdx,\n        total: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlagImage, {\n        src: current.flags.png,\n        alt: `Flag of ${current.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the capital of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n        options: options,\n        onOptionClick: onAnswer,\n        correctAnswer: current.capital[0],\n        selectedAnswer: current.capital[0] === answer ? current.capital[0] : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = QuizContainer;\nexport default QuizContainer;\nvar _c;\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","styles","FlagImage","ProgressBar","OptionsGrid","jsxDEV","_jsxDEV","QuizContainer","mode","current","questionIdx","quiz","answer","options","onAnswer","score","className","card","quizContainer","children","total","length","fileName","_jsxFileName","lineNumber","columnNumber","question","questionHighlight","name","common","src","flags","png","alt","onOptionClick","correctAnswer","capital","selectedAnswer","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/QuizContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './QuizContainer.module.css';\r\nimport FlagImage from './FlagImage'; \r\nimport ProgressBar from './ProgressBar';\r\nimport OptionsGrid from './OptionsGrid'; // Assuming you have an OptionsGrid component\r\n\r\nfunction QuizContainer({ mode, current, questionIdx, quiz, answer, options, onAnswer, score }) {\r\n  if (mode === \"flag\") {\r\n    return (\r\n      <div className={`${styles.card} ${styles.quizContainer}`}>\r\n        <ProgressBar current={questionIdx} total={quiz.length} />\r\n        <h2 className={styles.question}>\r\n          What is the flag of <span className={styles.questionHighlight}>{current.name.common}</span>\r\n        </h2>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  else if (mode === \"capital\") {\r\n    return (\r\n      <div className={`${styles.card} ${styles.quizContainer}`}>\r\n        <ProgressBar current={questionIdx} \r\n                     total={quiz.length} />\r\n        <FlagImage src={current.flags.png} \r\n                   alt={`Flag of ${current.name.common}`} />\r\n        <h2 className={styles.question}>\r\n          What is the capital of <span className={styles.questionHighlight}>{current.name.common}</span>\r\n        </h2> \r\n        <OptionsGrid options={options}\r\n                      onOptionClick={onAnswer}\r\n                      correctAnswer={current.capital[0]}\r\n                      selectedAnswer={current.capital[0] === answer ? current.capital[0] : null} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}