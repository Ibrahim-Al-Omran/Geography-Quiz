{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport default function useCountries() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\").then(res => res.json()).then(data => {\n      const filtered = data.filter(c => {\n        var _c$flags;\n        return c.capital && c.capital[0] && ((_c$flags = c.flags) === null || _c$flags === void 0 ? void 0 : _c$flags.png);\n      });\n      setCountries(filtered);\n      setLoading(false);\n    }).catch(err => {\n      setError(\"Failed to fetch countries\");\n      setLoading(false);\n    });\n  }, []);\n  return {\n    countries,\n    loading,\n    error\n  };\n}\n_s(useCountries, \"oFNb773lH7HZQ6s9e2UvmNgt08w=\");","map":{"version":3,"names":["useState","useEffect","useCountries","_s","countries","setCountries","loading","setLoading","error","setError","fetch","then","res","json","data","filtered","filter","c","_c$flags","capital","flags","png","catch","err"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/hooks/useCountries.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useCountries() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.com/v3.1/all?fields=name,capital,flags\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const filtered = data.filter(c => c.capital && c.capital[0] && c.flags?.png);\r\n        setCountries(filtered);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Failed to fetch countries\");\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { countries, loading, error };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,8DAA8D,CAAC,CAClEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAACC,CAAC;QAAA,IAAAC,QAAA;QAAA,OAAID,CAAC,CAACE,OAAO,IAAIF,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,MAAAD,QAAA,GAAID,CAAC,CAACG,KAAK,cAAAF,QAAA,uBAAPA,QAAA,CAASG,GAAG;MAAA,EAAC;MAC5EhB,YAAY,CAACU,QAAQ,CAAC;MACtBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDe,KAAK,CAAEC,GAAG,IAAK;MACdd,QAAQ,CAAC,2BAA2B,CAAC;MACrCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,SAAS;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACtC;AAACL,EAAA,CApBuBD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}