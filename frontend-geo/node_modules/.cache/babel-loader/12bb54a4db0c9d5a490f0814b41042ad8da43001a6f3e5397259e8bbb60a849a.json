{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cool_\\\\Documents\\\\geoTrivia\\\\frontend-geo\\\\src\\\\components\\\\QuizContainer.jsx\";\nimport React from 'react';\nimport styles from './QuizContainer.module.css';\nimport FlagImage from './FlagImage';\nimport ProgressBar from './ProgressBar';\nimport OptionsGrid from './OptionsGrid'; // Assuming you have an OptionsGrid component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizContainer({\n  mode,\n  current,\n  questionIdx,\n  quiz,\n  answer,\n  options,\n  score,\n  handleAnswer,\n  selectedAnswer\n}) {\n  if (mode === \"flag\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.card} ${styles.quizContainer}`,\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: questionIdx,\n        total: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the flag of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else if (mode === \"capital\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.card} ${styles.quizContainer}`,\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        current: questionIdx,\n        total: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlagImage, {\n        src: current.flags.png,\n        alt: `Flag of ${current.name.common}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.question,\n        children: [\"What is the capital of \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.questionHighlight,\n          children: current.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionsGrid, {\n        options: options,\n        onOptionClick: handleAnswer,\n        correctAnswer: answer,\n        selectedAnswer: selectedAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = QuizContainer;\nexport default QuizContainer;\nvar _c;\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","styles","FlagImage","ProgressBar","OptionsGrid","jsxDEV","_jsxDEV","QuizContainer","mode","current","questionIdx","quiz","answer","options","score","handleAnswer","selectedAnswer","className","card","quizContainer","children","total","length","fileName","_jsxFileName","lineNumber","columnNumber","question","questionHighlight","name","common","src","flags","png","alt","onOptionClick","correctAnswer","_c","$RefreshReg$"],"sources":["C:/Users/cool_/Documents/geoTrivia/frontend-geo/src/components/QuizContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './QuizContainer.module.css';\r\nimport FlagImage from './FlagImage'; \r\nimport ProgressBar from './ProgressBar';\r\nimport OptionsGrid from './OptionsGrid'; // Assuming you have an OptionsGrid component\r\n\r\nfunction QuizContainer({mode, \r\n  current, \r\n  questionIdx, \r\n  quiz, \r\n  answer, \r\n  options, \r\n  score, \r\n  handleAnswer, \r\n  selectedAnswer  }) {\r\n  if (mode === \"flag\") {\r\n    return (\r\n      <div className={`${styles.card} ${styles.quizContainer}`}>\r\n        <ProgressBar current={questionIdx} total={quiz.length} />\r\n        <h2 className={styles.question}>\r\n          What is the flag of <span className={styles.questionHighlight}>{current.name.common}</span>\r\n        </h2>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  else if (mode === \"capital\") {\r\n    return (\r\n      <div className={`${styles.card} ${styles.quizContainer}`}>\r\n        <ProgressBar current={questionIdx} \r\n                     total={quiz.length} />\r\n        <FlagImage src={current.flags.png} \r\n                   alt={`Flag of ${current.name.common}`} />\r\n        <h2 className={styles.question}>\r\n          What is the capital of <span className={styles.questionHighlight}>{current.name.common}</span>\r\n        </h2> \r\n        <OptionsGrid \r\n          options={options}\r\n          onOptionClick={handleAnswer}\r\n          correctAnswer={answer}\r\n          selectedAnswer={selectedAnswer}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}